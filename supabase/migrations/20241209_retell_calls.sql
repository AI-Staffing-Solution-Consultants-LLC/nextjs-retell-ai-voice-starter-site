-- Create enum types for call status and type
CREATE TYPE call_status_type AS ENUM ('started', 'in_progress', 'completed', 'failed');
CREATE TYPE call_type_enum AS ENUM ('inbound', 'outbound');
CREATE TYPE user_sentiment_type AS ENUM ('positive', 'neutral', 'negative');

-- Create table for storing call data
CREATE TABLE IF NOT EXISTS retell_calls (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    call_id TEXT UNIQUE NOT NULL,
    call_type call_type_enum NOT NULL,
    agent_id TEXT NOT NULL,
    call_status call_status_type NOT NULL,
    metadata JSONB DEFAULT '{}'::jsonb,
    retell_llm_dynamic_variables JSONB DEFAULT '{}'::jsonb,
    opt_out_sensitive_data_storage BOOLEAN DEFAULT false,
    start_timestamp BIGINT NOT NULL,
    end_timestamp BIGINT,
    transcript TEXT,
    transcript_object JSONB,
    recording_url TEXT,
    public_log_url TEXT,
    e2e_latency JSONB,
    llm_latency JSONB,
    llm_websocket_network_rtt_latency JSONB,
    disconnection_reason TEXT,
    call_analysis JSONB,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Create index on call_id for faster lookups
CREATE INDEX IF NOT EXISTS idx_retell_calls_call_id ON retell_calls(call_id);
CREATE INDEX IF NOT EXISTS idx_retell_calls_agent_id ON retell_calls(agent_id);
CREATE INDEX IF NOT EXISTS idx_retell_calls_call_status ON retell_calls(call_status);

-- Create function to update updated_at timestamp
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Create trigger to automatically update updated_at
CREATE TRIGGER update_retell_calls_updated_at
    BEFORE UPDATE ON retell_calls
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- Create RLS policies
ALTER TABLE retell_calls ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Enable read access for authenticated users" ON retell_calls
    FOR SELECT
    TO authenticated
    USING (true);

CREATE POLICY "Enable insert access for authenticated users" ON retell_calls
    FOR INSERT
    TO authenticated
    WITH CHECK (true);

CREATE POLICY "Enable update access for authenticated users" ON retell_calls
    FOR UPDATE
    TO authenticated
    USING (true)
    WITH CHECK (true);
